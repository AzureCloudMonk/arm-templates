{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmPrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix of the node to create.  Try to keep this short.  It will be also used for the DNS name.  The prefix must be the same as the one used when deploying the chef server."
      }
    },
    "vmPlatform": {
      "type": "string",
      "metadata": {
        "description": "The platform of the machine to create, e.g. Windows or Linux"
      },
      "allowedValues": [
        "windows",
        "linux"
      ],
      "defaultValue": "windows"
    },
    "sequence": {
      "type": "string",
      "metadata": {
        "description": "Sequence number to use to uniquely identify components"
      },
      "defaultValue": "1"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      },
      "defaultValue": "azure"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "chefServerUrl": {
      "type": "string",
      "metadata": {
        "description": "URL for the chef server to register the node with"
      }
    },
    "chefValidatorName": {
      "type": "string",
      "metadata": {
        "description": "Name of the validation certificate"
      }
    },
    "chefValidatorKey": {
      "type": "securestring",
      "metadata": {
        "description": "Base64 encoded string of the validation key"
      }
    },
    "chefRunlist": {
      "type": "string",
      "metadata": {
        "description": "Runlist to apply to the machine"
      },
      "defaultValue": "recipe[awesome_customers_windows]"
    }
  },
  "variables": {
    "unique": "[uniquestring(subscription().subscriptionId, resourceGroup().id, parameters('vmPrefix'))]",
    "storageAccountName": "[variables('unique')]",
    "vmName": "[toLower(concat(take(parameters('vmPrefix'), 8), '-', parameters('sequence'), '-', substring(variables('unique'), 0, 4)))]",
    "nicName": "[concat(variables('vmName'), '-Nic')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "chefSubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat(variables('vmName'), '-PublicIP')]",
    "publicIPAddressType": "Dynamic",
    "templateURLs": {
      "storageAccount": "https://raw.githubusercontent.com/chef-partners/arm-templates/master/arm-storage-account/storageaccount_exists.json",
      "vnet": "https://raw.githubusercontent.com/chef-partners/arm-templates/master/arm-virtual-network/vnet_exists.json",
      "node": "[concat('https://raw.githubusercontent.com/chef-partners/arm-templates/master/arm-node-training/node-', parameters('vmPlatform'), '.json')]",
      "chefextension": "[concat('https://raw.githubusercontent.com/chef-partners/arm-templates/master/arm-node-training/chefextension-', parameters('vmPlatform'), '.json')]",
      "publicIPAddress": "https://raw.githubusercontent.com/chef-partners/arm-templates/master/arm-public-ipaddress/publicipaddress_new.json",
      "nsg": {
        "chefnodes": "https://raw.githubusercontent.com/chef-partners/arm-templates/master/arm-security-groups/chef-nodes.json"
      }
    },
    "virtualNetworkName": "[concat(parameters('vmPrefix'), '-virtualnetwork')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "apiVersion": "2015-06-15",
    "location": "[resourceGroup().location]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "name": "StorageAccountSetup",
      "apiVersion": "2016-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateURLs').storageAccount]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "storageAccountType": {
            "value": "[variables('storageAccountType')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "PublicIPAddressSetup",
      "apiVersion": "2016-02-01",
      "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('templateURLs').publicIPAddress]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[variables('location')]"
            },
            "publicIPAddressName": {
              "value": "[variables('publicIPAddressName')]"
            },
            "publicIPAddressType": {
              "value": "[variables('publicIPAddressType')]"
            },
            "dnsLabelPrefix": {
              "value": "[variables('vmName')]"
            }
          }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "ChefNodesNSG",
      "apiVersion": "2016-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateURLs').nsg.chefnodes]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          }
        }
      }
    },

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Resources/deployments/PublicIPAddressSetup",
        "Microsoft.Resources/deployments/ChefNodesNSG"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', reference('ChefNodesNSG').outputs.groupName.value)]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "vmCreate",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/storageAccountSetup",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateURLs').node]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmName": {
            "value": "[variables('vmName')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "nicName": {
            "value": "[variables('nicName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "sequence": {
            "value": "[parameters('sequence')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "chefExtension",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/vmCreate"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateURLs').chefextension]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('vmName')]"
          },
          "chefServerUrl": {
            "value": "[parameters('chefServerUrl')]"
          },
          "chefValidatorName": {
            "value": "[parameters('chefValidatorName')]"
          },
          "chefValidatorKey": {
            "value": "[parameters('chefValidatorKey')]"
          },
          "chefRunlist": {
            "value": "[parameters('chefRunlist')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "type": "string",
      "value": "[reference('vmCreate').outputs.hostname.value]"
    }
  }
}
