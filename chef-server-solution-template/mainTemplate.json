{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS name prefix for the Storage Account where your Chef Server's disk will be placed."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for your Chef Server where API requests will be directed."
      }
    },
    "chefServerLicense": {
      "type": "string",
      "defaultValue": "25",
      "allowedValues": [
        "25",
        "50",
        "100",
        "150",
        "200",
        "250"
      ],
      "metadata": {
        "description": "The amount of nodes this Chef Server will be managing, default amount is 25 nodes with included support."
      }
    },
    "chefServerUser": {
      "type": "string",
      "metadata": {
        "description": "The initial user created for access to the Chef Server Management console."
      }
    },
    "chefServerPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The initial password for your intial user on the Chef Server."
      }
    },
    "chefOrganization": {
      "type": "string",
      "defaultValue": "chef",
      "metadata": {
        "description": "The initial organization created on the Chef server."
      }
    }
  },
  "variables": {
    "location": "West US",
    "imagePublisher": "chef-software",
    "imageOffer": "chef-server",
    "offerSKU": "[concat('azure_marketplace_', parameters('chefServerLicense'))]",
    "OSDiskName": "chefServerDisk",
    "nicName": "chefServerNIC",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat(parameters('storageAccountPrefix'), 'chefserverstorage')]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "chefServerIP",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "chefServer",
    "vmSize": "Standard_D2",
    "virtualNetworkName": "chefServerVNET",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "chefHostnameCmd": "chef-marketplace-ctl hostname ",
    "chefSetupCmd":  "[concat('chef-server-ctl ', 'marketplace-setup -y -u ', parameters('chefServerUser'),' -p ', parameters('chefServerPassword'), ' -f ', parameters('chefServerUser'), ' -l ', parameters('chefServerUser'), ' -e ', 'noreply@example.com', ' -o ', parameters('chefOrganization'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsName')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "plan": {
        "name": "[variables('offerSKU')]",
        "publisher": "[variables('imagePublisher')]",
        "product": "[variables('imageOffer')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computername": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "ssh": [
                "publicKeys": [
                    {
                        "path": "[]",
                        ""
                    }
                ]
            ]
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('offerSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
             "enabled": "true",
             "storageUri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/sethostname')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "commandToExecute": "[concat(variables('chefHostnameCmd'), reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/chefmarketplacesetup')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "commandToExecute": "[string(variables('chefSetupCmd'))]"
        }
      }
    }
  ],
  "outputs": {
    "starterKit": {
      "type": "string",
      "value": "[concat('https://',reference(variables('publicIPAddressName')).dnsSettings.fqdn),'/organizations/',parameters('chefOrganization'),'/getting_started')]"
    },
    "analyticsUrl": {
      "type": "string",
      "value": "[concat('https://',reference(variables('publicIPAddressName')).dnsSettings.fqdn),':8443')]"
    }
  }
}