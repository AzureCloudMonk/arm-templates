{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual machine in Azure, this will also be the hostname"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the machine to create"
      }
    },

    "location": {
      "type": "string",
      "metadata": {
        "description": "Azure location for this machine√ü"
      }
    },

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "metadata": {
        "description": "Password or SSH authentication"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      },
      "defaultValue": ""
    },
    "sshPublicKey": {
      "type": "string",
      "metadata": {
        "description": "SSH Public key for the specified user"
      },
      "defaultValue": ""
    },

    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the resource group into which everything will be deployed"
      }
    },

    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account to use or created"
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "Type of storage account to create"
      },
      "defaultValue": "Standard_LRS"
    },
    "storageAccountNewOrExisting": {
      "type": "string",
      "metadata": {
        "description": "State whether to create or use an existing storage account"
      },
      "defaultValue": "new"
    },

    "publicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "Name to give to the Public IP address of the machine"
      }
    },
    "publicIPDnsName": {
      "type": "string",
      "metadata": {
        "description": "The Domain Name Label for the DNS entry"
      }
    },
    "publicIPNewOrExisting": {
      "type": "string",
      "metadata": {
        "description": "Whether a new or an existing IP address should be used"
      },
      "defaultValue": "new"
    },
    
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual network to create or use"
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network Address space"
      }
    },
    "virtualNetworkNewOrExisting": {
      "type": "string",
      "metadata": {
        "description": "State whether the virtual network exists or not"
      },
      "defaultValue": "new"
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet to create within the virtual network"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "Address space for the subnet"
      }
    },

    "chefServerSku": {
      "type": "string",
      "defaultValue": "azure_marketplace-25",
      "allowedValues": [
        "chefbyol",
        "azure_marketplace-25",
        "azure_marketplace-50",
        "azure_marketplace-100",
        "azure_marketplace-150",
        "azure_marketplace-200",
        "azure_marketplace-250"
      ],
      "metadata": {
        "description": "The amount of nodes this Chef Server will be managing, default amount is 25 nodes with included support."
      }
    },

    "chefServerConfigure": {
      "type": "string",
      "defaultValue": "no",
      "metadata": {
        "description": "State whether to run commands to configure the Organization and the initial user for the management console"
      }
    },
    "chefServerSignupEnable": {
      "type": "string",
      "defaultValue": "true",
      "metadata": {
        "description": "State whether to disable the signup feature on the management home page"
      }
    },
    "chefServerOrg": {
      "type": "string",
      "metadata": {
        "description": "The organization to create on the chef server"
      },
      "defaultValue": ""
    },
    "chefServerFirstName": {
      "type": "string",
      "metadata": {
        "description": "First name of the initial user"
      },
      "defaultValue": ""
    },
    "chefServerLastName": {
      "type": "string",
      "metadata": {
        "description": "Last name of the initial user"
      },
      "defaultValue": ""
    }, 
    "chefServerEmailAddress": {
      "type": "string",
      "metadata": {
        "description": "Email Address for the new user"
      },
      "defaultValue": ""
    },   
    "chefServerUser": {
      "type": "string",
      "metadata": {
        "description": "The initial user"
      },
      "defaultValue": ""
    },
    "chefServerUserPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the initial user"
      },
      "defaultValue": ""
    }
    
  },
  "variables": {
    "location": "[parameters('location')]",

    "vmName": "[parameters('vmName')]",
    "vmSize": "[parameters('vmSize')]",

    "offerSKU": "[parameters('chefServerSku')]",

    "nicName": "chefServerNIC",

    "vnetName": "[parameters('virtualNetworkName')]",
    "vnetAddressPrefix": "[parameters('virtualNetworkAddressPrefix')]",

    "subnetName": "[parameters('subnetName')]",
    "subnetPrefix": "[parameters('subnetPrefix')]",

    "storageAccountName": "[parameters('storageAccountName')]",
    "storageAccountType": "[parameters('storageAccountType')]",

    "publicIPAddressName": "[parameters('publicIPAddressName')]",
    "publicIPAddressType": "Dynamic",

    "apiVersion": "2015-06-15",

    "template_urls": {
      "storageAccount": "[concat('https://raw.githubusercontent.com/chef-partners/arm-templates/master/arm-storage-account/storageaccount_', parameters('storageAccountNewOrExisting'), '.json')]",
      "vnet": "[concat('https://raw.githubusercontent.com/chef-partners/arm-templates/master/arm-virtual-network/vnet_', parameters('virtualNetworkNewOrExisting'), '.json')]",
      "publicIPAddress": "[concat('https://raw.githubusercontent.com/chef-partners/arm-templates/master/arm-public-ipaddress/publicipaddress_', parameters('publicIPNewOrExisting'), '.json')]",
      "virtualMachine": "[concat('https://raw.githubusercontent.com/chef-partners/arm-templates/master/chef-server-solution-template/chefserver-', parameters('authenticationType'), '.json')]",
      "configureChefServer": "[concat('https://raw.githubusercontent.com/chef-partners/arm-templates/master/chef-server-solution-template/configurechefserver-', parameters('chefServerConfigure'), '.json')]"
    },

    "cloudHead": "[concat('#cloud-config\nmanage_etc_hosts: true\n\npackage_update: true\npackage_upgrade: false\n\nbootcmd:\n - sed -i.bak \"s/^biscotti.*$/biscotti.enabled = false/\" /etc/chef-marketplace/marketplace.rb\n - sed -i.bak \"s/^manage\\.marketplace.*$/manage.marketplace.sign_up.enabled = ', parameters('chefServerSignupEnable'), '/\" /etc/chef-marketplace/marketplace.rb\n')]"

  },
  "resources": [

    {
      "type": "Microsoft.Resources/deployments",
      "name": "StorageAccountSetup",
      "apiVersion": "2016-02-01",
      "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('template_urls').storageAccount]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[variables('location')]"
            },
            "storageAccountType": {
              "value": "[variables('storageAccountType')]"
            },
            "storageAccountName": {
              "value": "[variables('storageAccountName')]"
            }
          }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "PublicIPAddressSetup",
      "apiVersion": "2016-02-01",
      "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('template_urls').publicIPAddress]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[variables('location')]"
            },
            "publicIPAddressName": {
              "value": "[variables('publicIPAddressName')]"
            },
            "publicIPAddressType": {
              "value": "[variables('publicIPAddressType')]"
            },
            "dnsLabelPrefix": {
              "value": "[parameters('publicIPDnsName')]"
            }
          }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "VirtualNetworkSetup",
      "apiVersion": "2016-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('template_urls').vnet]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('vnetName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "vnetAddressPrefix": {
            "value": "[variables('vnetAddressPrefix')]"
          },
          "subnetName": {
            "value": "[variables('subnetName')]"
          },
          "subnetPrefix": {
            "value": "[variables('subnetPrefix')]"
          }
        }
      }
    },   

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/PublicIPAddressSetup",
        "Microsoft.Resources/deployments/VirtualNetworkSetup"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[reference('PublicIPAddressSetup').outputs.publicIpId.value]"
              },
              "subnet": {
                "id": "[reference('VirtualNetworkSetup').outputs.subnetRef.value]"
              }
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "ChefServerSetup",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/StorageAccountSetup",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('template_urls').virtualMachine]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "vmName": {
            "value": "[variables('vmName')]"
          },
          "vmSize": {
            "value": "[variables('vmsize')]"
          },
          "chefServerSku": {
            "value": "[variables('offerSKU')]"
          },
          "cloudHead": {
            "value": "[variables('cloudHead')]"
          },
          "fqdn": {
            "value": "[reference('PublicIPAddressSetup').outputs.fqdn.value]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "nicName": {
            "value": "[variables('nicName')]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "ChefServerConfiguration",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ChefServerSetup"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('template_urls').configureChefServer]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('vmName')]"
          },
          "chefServerOrg": {
            "value": "[parameters('chefServerOrg')]"
          },
          "chefServerFirstName": {
            "value": "[parameters('chefServerFirstName')]"
          },
          "chefServerLastName": {
            "value": "[parameters('chefServerLastName')]"
          },
          "chefServerEmailAddress": {
            "value": "[parameters('chefServerEmailAddress')]"
          },
          "chefServerUser": {
            "value": "[parameters('chefServerUser')]"
          },
          "chefServerUserPassword": {
            "value": "[parameters('chefServerUserPassword')]"
          },
          "fqdn": {
            "value": "[reference('PublicIPAddressSetup').outputs.fqdn.value]"
          }
        }
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "type": "string",
      "value": "[reference('PublicIPAddressSetup').outputs.fqdn.value]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', reference('PublicIPAddressSetup').outputs.fqdn.value)]"
    },
    "chefServerURL": {
      "type": "string",
      "value": "[reference('ChefServerConfiguration').outputs.chefServerURL.value]"
    }
  }
}